import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
df = pd.read_csv('StudentStudyHour.csv')
df

df.dropna(inplace=True, axis=0)
y = df['Scores'] if 'Scores' in df.columns else df[df.columns[1]] 
X = df.drop(columns=['Scores'] if 'Scores' in df.columns else [df.columns[1]])
display(df, y, X) 

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=101)
print(X_train)
print(X_test)
scaler = StandardScaler()
scaler.fit(X_test)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)
print(X_train)
print(X_test)

lr = LinearRegression()
model = lr.fit(X_train,y_train)
y_pred = model.predict(X_test)
df = pd.DataFrame({'y_test':y_test,'y_pred':y_pred})
df
print(mean_squared_error(y_test,y_pred))